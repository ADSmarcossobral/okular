// This file is generated by kconfig_compiler from kdvi.kcfg.
// All changes you do to this file will be lost.
#ifndef PREFS_H
#define PREFS_H

#include <kconfigskeleton.h>

class Prefs : public KConfigSkeleton
{
  public:
    class EnumViewMode
    {
      public:
      enum { KVS_SingePage, KVS_Continuous, KVS_ContinuousFacing, COUNT };
    };

    static Prefs *self();
    ~Prefs();

    /**
      Set Type of bitmap fonts used. LaserJet 4 is usually a good choice.
    */
    static
    void setMetafontMode( int v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "MetafontMode" ) ))
        self()->mMetafontMode = v;
    }

    /**
      Get Type of bitmap fonts used. LaserJet 4 is usually a good choice.
    */
    static
    int metafontMode()
    {
      return self()->mMetafontMode;
    }

    /**
      Set Use MetaFont to generate missing fonts. If in doubt, enable this option.
    */
    static
    void setMakePK( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "MakePK" ) ))
        self()->mMakePK = v;
    }

    /**
      Get Use MetaFont to generate missing fonts. If in doubt, enable this option.
    */
    static
    bool makePK()
    {
      return self()->mMakePK;
    }

    /**
      Set Show PostScript specials. If in doubt, enable this option.
    */
    static
    void setShowPS( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "ShowPS" ) ))
        self()->mShowPS = v;
    }

    /**
      Get Show PostScript specials. If in doubt, enable this option.
    */
    static
    bool showPS()
    {
      return self()->mShowPS;
    }

    /**
      Set Show hyperlinks. If in doubt, enable this option
    */
    static
    void setShowHyperLinks( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "ShowHyperLinks" ) ))
        self()->mShowHyperLinks = v;
    }

    /**
      Get Show hyperlinks. If in doubt, enable this option
    */
    static
    bool showHyperLinks()
    {
      return self()->mShowHyperLinks;
    }

    /**
      Set Use Type 1 fonts if available. If in doubt, enable this option.
    */
    static
    void setUseType1Fonts( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "UseType1Fonts" ) ))
        self()->mUseType1Fonts = v;
    }

    /**
      Get Use Type 1 fonts if available. If in doubt, enable this option.
    */
    static
    bool useType1Fonts()
    {
      return self()->mUseType1Fonts;
    }

    /**
      Set Use font hinting. You should enable this, if the use of font hinting improves readability on your machine.
    */
    static
    void setUseFontHints( bool v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "UseFontHints" ) ))
        self()->mUseFontHints = v;
    }

    /**
      Get Use font hinting. You should enable this, if the use of font hinting improves readability on your machine.
    */
    static
    bool useFontHints()
    {
      return self()->mUseFontHints;
    }

    /**
      Set ViewMode
    */
    static
    void setViewMode( int v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "ViewMode" ) ))
        self()->mViewMode = v;
    }

    /**
      Get ViewMode
    */
    static
    int viewMode()
    {
      return self()->mViewMode;
    }

    /**
      Set EditorCommand
    */
    static
    void setEditorCommand( const QString & v )
    {
      if (!self()->isImmutable( QString::fromLatin1( "EditorCommand" ) ))
        self()->mEditorCommand = v;
    }

    /**
      Get EditorCommand
    */
    static
    QString editorCommand()
    {
      return self()->mEditorCommand;
    }

    static
    void writeConfig()
    {
      static_cast<KConfigSkeleton*>(self())->writeConfig();
    }
  protected:
    Prefs();
    static Prefs *mSelf;


    // kdvi
    int mMetafontMode;
    bool mMakePK;
    bool mShowPS;
    bool mShowHyperLinks;
    bool mUseType1Fonts;
    bool mUseFontHints;
    int mViewMode;
    QString mEditorCommand;

  private:
};

#endif
