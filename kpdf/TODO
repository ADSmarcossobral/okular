Personal Albert's list
-> make links functional (done in HEAD)

More items
-> multiple pages per view
-> continous mode
-> screen editing: framework
-> screen editing: tools
-> export all text in plain_text/html
-> extract(export?) images
-> implement history (mainly for actionNamed)
-> zoom: fit text (with configurable margin)
-> new icons (contest at kde-look that will end in 2004-Oct-01)

Porting / In progress on the branch (first item comes first):
-> porting Albert's link following
-> implementing async document generator using Albert's thread as the generation thread
-> better zoom handling
-> (store observers data into pages?)

Done (sorted by inv.time)
-> added the option to open password protected files (from head)
-> added the TOC from head (missing click and go functionality because it needs link following)
-> added a 'search bar' with prune-as-you-type feature
-> ported Albert's search and implemented case sensitive
-> smart handling of pixmap using an Observer ID (thumbnails are gone, only pixmaps now)
-> some toolbar/menu changes
-> outline bottom and right edges (of pages)
-> centering pages in the view
-> kpdf output at 100% has exactly the same size as acroread now
-> qsplitter layouting
-> zooming works as expected (and added 'fit to page' too)
-> new go to page dialog
-> previews sorted by visible areas (prioritize items where the scrollbar is)
-> previews speedup: 50-100%
-> use local instead of X memory for thumbnails (..)
-> merge lots of kpdf_part and part (centralview) code (to simplify/clenup)

Here comes a list of suggestions from a dot post http://dot.kde.org/1095261317:
 copy text from rectangular blocks
 text copy/selection in wordprocessor-style
 ruler
 distance measure tool
 color picker
 annotations 'postit' like
 hyperlinks (albert's work needs to be forward ported)
 integration with a voice synthesizer
 export in other formats keeping formatting (a dream.. expect for PNG :-)

